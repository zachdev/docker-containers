<?xml version="1.0" encoding="utf-8"?>
<Containers>
  <Name>Nginx-letsencrypt</Name>
  <Description>
    Nginx based webserver with a built-in letsencrypt client that automates free SSL certificate generation and renewal processes. [br][br]
    [b][u][span style='color: #E80000;']Configuration[/span][/u][/b][br]
    [b]/config[/b] This is where the nginx configuration and website files will reside[br][br]
    Don't forget to enter in the host ports, e-mail address, the domain url(without any subdomains like www) and the subdomains (just the subdomains, comma separated, no spaces) (under advanced view). [br][br]
    Note: Make sure that the port 443 in the container is accessible from the outside of your lan. It is OK to map container's port 443 to another port on the host (ie 943) as long as your router will forward port 443 from the outside to port 943 on the host and it will end up at port 443 in the container. If this is confusing, just leave 443 mapped to 443 and forward port 443 on your router to your unraid IP.[br][br]
    Prior to SSL certificate creation, letsencrypt creates a temporary webserver and checks to see if it is accessible through the domain url provided for validation. Make sure that your server is reachable through your.domain.url:443 and that port 443 is forwarded on your router to the container's port 443 prior to running this docker. Otherwise letsencrypt validation will fail, and no certificates will be generated.[br]
  </Description>
  <Overview>
    Nginx based webserver with a built-in letsencrypt client that automates free SSL certificate generation and renewal processes.
  </Overview>
  <Support>http://lime-technology.com/forum/index.php?topic=39413.0</Support>
  <Registry>https://registry.hub.docker.com/u/aptalca/nginx-letsencrypt/</Registry>
  <GitHub>https://github.com/aptalca/docker-webserver</GitHub>
  <Repository>aptalca/nginx-letsencrypt</Repository>
  <BindTime>true</BindTime>
  <Privileged>true</Privileged>
    <Networking>
    <Mode>bridge</Mode>
    <Publish>
      <Port>
        <HostPort></HostPort>
        <ContainerPort>80</ContainerPort>
        <Protocol></Protocol>
      </Port>
      <Port>
        <HostPort>443</HostPort>
        <ContainerPort>443</ContainerPort>
        <Protocol></Protocol>
      </Port>
    </Publish>
  </Networking>
  <Environment>
    <Variable>
      <Name>EMAIL</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>URL</Name>
      <Value></Value>
    </Variable>
    <Variable>
      <Name>SUBDOMAINS</Name>
      <Value>www</Value>
    </Variable>
  </Environment>    
  <Data>
    <Volume>
      <HostDir></HostDir>
      <ContainerDir>/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  <WebUI>https://[IP]:[PORT:443]</WebUI>
  <Banner></Banner>
  <Icon>http://technoloman.com/wp-content/uploads/2015/12/Lets_encrypt_logo.png</Icon>
  <Date>2016-01-15</Date>
  <Category>Network:Web Network:Proxy</Category>
  <Changes>
    [center][font size=5]Nginx-Letsencrypt Change Log[/font][/center]

    [font size=4]2016.01.15[/font]
    - Added fail2ban support (Important: If updating container, [b][u][span style='color: #E80000;']please edit your container settings and check "Privileged" under advanced settings[/span][/u][/b]. Without it, fail2ban does not work due to inability to modify iptables)

    [font size=4]2016.01.05[/font]
    - Fixed permissions for php-fpm and memcached (they were not starting)
    - Fixed silly typo causing cert renewal every 6 days instead of 60

    [font size=4]2016.01.03[/font]
    - Update to support multiple subdomains
    
    [font size=4]2015.12.29[/font]
    - Initial release
  </Changes>
</Containers>
